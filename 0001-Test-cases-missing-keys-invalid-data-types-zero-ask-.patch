From 5e9d5427bce3ef0f9f6aa67a4ffdd677d42de12e Mon Sep 17 00:00:00 2001
From: bshongwe <dru.da.beat.hustle@gmail.com>
Date: Fri, 16 Feb 2024 15:17:42 +0200
Subject: [PATCH] Test cases: missing keys, invalid data types, zero ask & bid
 size, -ve prices, time stamp parsing, rounding, large numbers, performance,
 realistice data, exceptions

---
 client_test3.py | 39 +++++++++++++++++++++++++++++++++++++++
 1 file changed, 39 insertions(+)

diff --git a/client_test3.py b/client_test3.py
index af2bf26..10d8e6b 100644
--- a/client_test3.py
+++ b/client_test3.py
@@ -8,6 +8,8 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
@@ -15,9 +17,46 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+     for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
 
 
   """ ------------ Add more unit tests ------------ """
+   def test_getDataPoint_emptyQuote(self):
+        """Test if getDataPoint handles empty quotes correctly."""
+        quote = {}
+        with self.assertRaises(KeyError):
+            getDataPoint(quote)
+
+    def test_getDataPoint_missingKeys(self):
+        """Test if getDataPoint handles quotes with missing keys correctly."""
+        quote = {'timestamp': '2019-02-11 22:06:30.572453', 'id': '0.109974697771'}
+        with self.assertRaises(KeyError):
+            getDataPoint(quote)
+
+    def test_getDataPoint_invalidDataTypes(self):
+        """Test if getDataPoint handles quotes with invalid data types correctly."""
+        quote = {'top_ask': {'price': 'invalid', 'size': 'invalid'}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 'invalid', 'size': 'invalid'}, 'id': '0.109974697771', 'stock': 'ABC'}
+        with self.assertRaises(TypeError):
+            getDataPoint(quote)
+
+    def test_getDataPoint_zeroAskBidSize(self):
+        """Test if getDataPoint handles quotes with zero ask or bid size correctly."""
+        quotes = [
+            {'top_ask': {'price': 121.2, 'size': 0}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+            {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 0}, 'id': '0.109974697771', 'stock': 'DEF'}
+        ]
+        for quote in quotes:
+            self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price']) / 2))
+
+    def test_getDataPoint_negativePrices(self):
+        """Test if getDataPoint handles quotes with negative prices correctly."""
+        quotes = [
+            {'top_ask': {'price': -121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+            {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': -117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+        ]
+        for quote in quotes:
+            self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price']) / 2))
 
 
 
-- 
2.43.0.windows.1

